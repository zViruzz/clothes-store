generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified Boolean?
  image         String?
  accounts      Account[]
  purchases     Purchase[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Account {
  id                String   @id @default(cuid())
  id_token          String
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  accessToken       String?
  expiresAt         Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String   @unique @db.VarChar(255)
  title        String   @db.VarChar(255)
  category     String
  description  String   @db.Text
  price        Float    @default(0)
  sizes        String[]
  color_scheme String[]
  url_images   String[]
  createdAt    DateTime @default(now())
}

model Purchase {
  id             String         @id
  userId         String
  user           User           @relation(fields: [userId], references: [id])
  paymentData    PaymentData    @relation(fields: [paymentDataId], references: [id])
  paymentDataId  String
  shipmentData   ShipmentData   @relation(fields: [shipmentDataId], references: [id])
  shipmentDataId String
  cartItems      CartItem[]
  status         PurchaseStatus @default(PROCESSING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model PaymentData {
  id             String         @id @default(cuid())
  deliveryMethod DeliveryMethod
  paymentMethod  PaymentMethod
  Purchase       Purchase[]
}

model ShipmentData {
  id           String     @id @default(cuid())
  name         String?
  address      String?
  mobileNumber String
  city         String?
  zip          String?
  Purchase     Purchase[]
  createdAt    DateTime   @default(now())
}

model CartItem {
  id         String   @id @default(cuid())
  purchaseId String
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  name       String
  title      String
  category   String
  price      Float
  color      String
  size       String
  urlImages  String[]
  quantity   Int
}

enum PurchaseStatus {
  FAILED
  CANCELLED
  PROCESSING
  PENDING
  SHIPPED
  DELIVERED
  READY_FOR_PICKUP
}

enum DeliveryMethod {
  delivery
  pickup
}

enum PaymentMethod {
  transfer
}
